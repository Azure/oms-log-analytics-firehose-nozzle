---
# The high-level description of your tile.
# Replace these properties with real values.
#
name: azure-log-analytics-nozzle # By convention lowercase with dashes
icon_file: resources/icon.png
label: Microsoft Azure Log Analytics Nozzle
description: A nozzle which forwards metrics and logs from the Loggregator Firehose to OMS (Operations Management Suite) Log Analytics
# metadata_version: 1.8                 # Optional, defaults to 1.5

# Global defaults (all optional)
#
org: system                             # Name of org to create for your apps
space: azure-log-analytics-nozzle-space # Name of space to create for your apps
apply_open_security_group: true         # Apply open security group, default: false

# Specify the packages to be included in your tile.
# The format of the section to include depends on the type
# of package you are describing. For fragments of each type
# that you can copy & paste, see:
#
# https://github.com/cf-platform-eng/tile-generator/blob/master/README.md
#
packages:
- name: azure-log-analytics-nozzle
  type: app
#  label: My fabulous appplication      # Package name for use in human-readable labels in OpsManager
  pre_deploy: |
    cf delete-org -f azure-log-analytics-nozzle-org
  manifest:
    path: resources/azure-log-analytics-nozzle.zip
    buildpack: go_buildpack
    command: oms-log-analytics-firehose-nozzle
    instances: (( .properties.nozzle_instance_number.value ))
    memory: 512M
    no-route: true
  health_check: none

# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
# stemcell_criteria:
#   os: ubuntu-trusty
#   requires_cpi: false
#   version: '3062'

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose

# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
# 
forms:
 - name: nozzle-config-form
   label: Nozzle Config
   description: Properties for Azure Log Analytics Nozzle
   properties:
   - name: OMS_WORKSPACE
     type: string
     label: OMS Workspace ID
   - name: OMS_KEY
     type: secret
     label: OMS Workspace Key
   - name: nozzle_instance_number
     type: integer
     label: OMS Nozzle Instance Number
     default: 2
     constraints:
       min: 1
       max: 100
     description: Number of nozzle application. Scale it according to the instruction at https://docs.pivotal.io/pivotalcf/2-2/devguide/services/oms-nozzle.html#scale-nozzle
   - name: OMS_POST_TIMEOUT
     type: string
     default: 10s
     label: OMS Post Timeout
     description: Timeout duration for posting to OMS Log Analytics
   - name: OMS_BATCH_TIME
     type: string
     default: 10s
     label: OMS Batch Time
     description: Time interval for posting an event batch to OMS Log Analytics
   - name: OMS_MAX_MSG_NUM_PER_BATCH
     type: integer
     default: 1000
     label: Max Event Number Per Batch
     description: The max number of events in each batch to OMS Log Analytics
     constraints:
       min: 1
       max: 10000
   - name: FIREHOSE_USER
     type: string
     label: Firehose Username
     description: The CF user who has admin and firehose access
   - name: FIREHOSE_USER_PASSWORD
     type: secret
     label: Firehose User Password
     description: The password of the CF user who has admin and firehose access
   - name: API_ADDR
     type: string
     label: Cloud Foundry API Address
     description: e.g. https://api.203.0.113.0.xip.io . If current environment is to be monitored, leave it empty and nozzle will fetch the address automatically
     optional: true
     constraints:
     - must_match_regex: '^https://.*$'
       error_message: 'This address starts with "https://"'
   - name: DOPPLER_ADDR
     type: string
     label: Cloud Foundry Doppler Address
     description: e.g. wss://doppler.203.0.113.0.xip.io:443 . If empty, nozzle will generate doppler address based on API address
     optional: true
     constraints:
     - must_match_regex: '^wss://.*$'
       error_message: 'This address starts with "wss://"'
   - name: CF_ENVIRONMENT
     type: string
     label: Cloud Foundry Environment
     description: Label to identify logs and metrics from different CF environments
     default: "cf"
   - name: SKIP_SSL_VALIDATION
     type: boolean 
     label: Skip SSL Validation
     default: false
   - name: EVENT_FILTER
     type: string
     label: Event Types to be Filtered out
     description: A comma separated list of event types to be dropped. Valid types are METRIC,LOG,HTTP
     optional: true
   - name: SPACE_WHITELIST
     type: string
     label: App Space Whitelist
     description: A comma separated list of spaces used as whitelist for app log. For example "system.azure, azure.*"
     optional: true
   - name: IDLE_TIMEOUT
     type: string
     description: Keep Alive Duration for Firehose Consumer
     default: 60s
     label: Idle Timeout
   - name: LOG_EVENT_COUNT
     type: boolean
     label: Log Event Count
     description: Whether to log to OMS Log Analytics the count of events that the nozzle has recevied, sent and lost
     default: true
   - name: LOG_EVENT_COUNT_INTERVAL
     type: string
     label: Log Event Count Interval
     description: The time interval to log event count
     default: 60s
   - name: LOG_LEVEL
     type: dropdown_select
     label: Log Level
     description: The minimal log level of the nozzle
     options:
     - name: DEBUG
       label: Debug
     - name: INFO
       label: Info
     - name: ERROR
       label: Error
     
# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
# requires_product_versions:
# - name: p-mysql
#   version: '~> 1.7'

# Customize upgrade parameters if the defaults don't meet your needs.
#
# update:
#   canaries: 1
#   canary_watch_time: 10000-100000
#   max_in_flight: 1
#   update_watch_time: 10000-100000

# If prior versions of your tile are installed and configured, their
# property values will not be overwritten by new defaults provided
# in this file. If that is your intent, you must do the overwriting
# explicitly using JavaScript migration functions, like so:
#
migration: |
  properties['properties']['.properties.org']['value'] = 'system';
